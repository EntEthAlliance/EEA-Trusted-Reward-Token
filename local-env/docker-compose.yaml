version: '2'
services:
  #
  # node1 is first of the two-node ethereum private network based on Hyperledger Besu
  #
  node1:
    image: hyperledger/besu:1.2.4
    command: --data-path=/var/lib/besu --genesis-file=/var/lib/besu/genesis.json --rpc-http-enabled --rpc-http-host=0.0.0.0 --rpc-ws-enabled --rpc-ws-host=0.0.0.0 --discovery-enabled=false --p2p-host=0.0.0.0 --rpc-http-api=ETH,NET,WEB3,DEBUG,MINER,ADMIN,TXPOOL,CLIQUE --rpc-ws-api=ETH,NET,WEB3,DEBUG,MINER,ADMIN,TXPOOL,CLIQUE --rpc-http-cors-origins='*' --host-whitelist='*' --min-gas-price=0
    ports:
      - 22011:8545
      - 22012:8546
    volumes:
      - './besu/node1:/var/lib/besu'
    networks:
      devcon_net:
        ipv4_address: '172.13.0.2'

  #
  # ethsigner1 is the signing wallet associated to node1, and provides an RPC endpoint for web3 APIs
  #
  ethsigner1:
    image: pegasyseng/ethsigner
    command: --chain-id=12345 --downstream-http-host=node1 --downstream-http-port=8545 --http-listen-host=0.0.0.0 --http-listen-port=8555 file-based-signer --password-file=/var/lib/ethsigner/password.txt --key-file=/var/lib/ethsigner/keystore/account.txt
    ports:
      - 22001:8555
      - 22002:8556
    volumes:
      - './ethsigner/node1:/var/lib/ethsigner'
    depends_on:
      - node1
    networks:
      devcon_net:
        ipv4_address: '172.13.0.3'

  #
  # node2 is the second of the two-node ethereum private network based on Hyperledger Besu
  #
  node2:
    image: hyperledger/besu:1.2.4
    command: --data-path=/var/lib/besu --genesis-file=/var/lib/besu/genesis.json --rpc-http-enabled --rpc-http-host=0.0.0.0 --rpc-ws-enabled --rpc-ws-host=0.0.0.0 --discovery-enabled=false --p2p-host=0.0.0.0 --rpc-http-api=ETH,NET,WEB3,DEBUG,MINER,ADMIN,TXPOOL,CLIQUE --rpc-ws-api=ETH,NET,WEB3,DEBUG,MINER,ADMIN,TXPOOL,CLIQUE --rpc-http-cors-origins='*' --host-whitelist='*' --min-gas-price=0
    ports:
      - 23011:8545
      - 23012:8546
    volumes:
      - './besu/node2:/var/lib/besu'
    networks:
      devcon_net:
        ipv4_address: '172.13.0.4'

  #
  # ethsigner2 is the signing wallet associated to node2, and provides an RPC endpoint for web3 APIs
  #
  ethsigner2:
    image: pegasyseng/ethsigner
    command: --chain-id=12345 --downstream-http-host=node2 --downstream-http-port=8545 --http-listen-host=0.0.0.0 --http-listen-port=8555 file-based-signer --password-file=/var/lib/ethsigner/password.txt --key-file=/var/lib/ethsigner/keystore/account.txt
    ports:
      - 23001:8555
      - 23002:8556
    volumes:
      - './ethsigner/node2:/var/lib/ethsigner'
    depends_on:
      - node2
    networks:
      devcon_net:
        ipv4_address: '172.13.0.5'

  #
  # tee-listener provides runtime APIs for interacting with SGX based TEEs. A secure channel is setup
  # between the listener and the SGX worker cluster to provision sensitive materials such as signing keys.
  #
  tee-listener:
    image: iexechub/eea-token:listener-sim
    command: python3 /app/tee_listener.py
    volumes:
      # this allows the tee-listener instance to use the same docker daemon that launched it
      # to launch a sibling instance for executing the TCF logic and be attached to the same network
      - /var/run/docker.sock:/var/run/docker.sock
      #- ./tee-listener/data:/app/mode_sim/data
      - ./tee-listener/secrets:/run/secrets
    ports:
      - 5000:5000
    environment:
      # used to tell the docker container running SGX where the target blockchain is
      # note because the TCF container is launched as a sibling, it automatically shares the same
      # network so the "node1" hostname is resolvable
      - TCF_WEB3_URI="http://node1:22001"

networks:
  devcon_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.13.0.0/16

